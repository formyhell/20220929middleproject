<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE sqlMap
			PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
			"http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="lecture">

<!-- 
	이 영역에 sql문에 맞는 태그를 사용하여 SQL문을 기술한다.
	
	사용할 수 있는 기본적인 태그들
		<select> ~~~</select>
		<insert> ~~~</insert>
		<update> ~~~</update>
		<delete> ~~~</delete>
	
	위 태그에서 사용되는 속성들
      1) id속성	: 해당 태그를 호출할 때 <sqlMap>태그의 namespace와 연결하여 사용하는 이름
      2) parameterClass : sql문에 사용할 데이터가 들어있는 객체 타입을 지정
   						(보통 VO클래스, 자바의 자료형이름 등이 사용된다.) 써주는게 정석인데 생략가능
   						(typeAlias로 지정한 alias명을 사용할 수 있다.)
	  3) resultClass 속성 : select문을 실행한 결과를 담을 객체를 지정한다.
	  					(보통 VO클래스나 자바의 자료형 이름을 사용한다.) 
   						(typeAlias로 지정한 alias명을 사용할 수 있다.)
	  4) resultMap 속성 : 결과 레코드 컬럼명과 VO객체의 property명이 다를 경우에 적절한 매핑을 위해 사용한다.
 -->
<insert id="insertLecture" parameterClass="lecVO">

	insert into lecture 
	(mem_mail, lecture_id, instructor_Id, lec_title,lec_price,lec_intro, lec_curri, scategory_id, atch_file_id)
	values (#memMail#, #lecId#, #instructorId#, #lecTitle#,#lecPrice#, #lecIntro#, #lecCurri#, #scategoryId#, #atchFileId#) <!-- iBatis가 알아서 lv.getLecId 
		호출함 -->

</insert>

	<!-- <select id="checkID" parameterClass="String" resultClass="int"> select 
		* from member where mem_mail = #memMail# </select> -->


	<update id="updateLecture" parameterClass="lecVO">
		update lecture
		set lec_title = #lecTitle#,
			lec_intro = #lecIntro#,
			atch_file_id = #atchFileId#
		where lecture_id = #lecId#
	</update>

	<update id="updateApprove" parameterClass="LecVO">
		update lecture
		set approve = 'Y'
		where lecture_id = #lecId#
	</update>


	<delete id="deleteLecture" parameterClass="String">
		delete from lecture
		where lecture_id = #lecId#
	</delete>


	<!-- 방법2 -->

	<resultMap class="lecVO" id="lecMap">
		<result property="lecId" column="lecture_id" />
		<result property="lecTitle" column="lec_title" />
		<result property="lecPrice" column="lec_price" />
		<result property="lecIntro" column="lec_intro" />
		<result property="lecCurri" column="lec_curri" />
		<result property="instructorId" column="instructor_id" />
		<result property="scategoryId" column="scategory_id" />
		<result property="memMail" column="mem_mail" />
		<result property="atchFileId" column="atch_file_id" />
		<result property="approve" column="approve"/>
	</resultMap>
	
	
<select id="getClass" parameterClass="String" resultClass="lecVO" resultMap="lecMap"> 
<!-- 	select LECTURE_ID
	from ORDER_DETAIL
	where ORDER_ID = (Select A.PAY_ID
                        from PAYMENT A, ORDERS B
                       where A.PAY_ID = B.ORDER_ID
                         AND B.MEM_MAIL = #memMail#)
 -->
select B.*
from LECTURE B,
(select LECTURE_ID
from ORDER_DETAIL
where ORDER_ID = (Select A.PAY_ID
                  from PAYMENT A, ORDERS B
                  where A.PAY_ID = B.ORDER_ID
                  AND B.MEM_MAIL = #memMail#)) A
where B.LECTURE_ID = A.LECTURE_ID
                         
</select>
	
	
	
	
	

	<select id="getLectureAllYes" resultMap="lecMap">
		
		select *
		from lecture		
		where approve = 'Y'
		
	</select>
	
	<select id="getLectureAllNo" resultMap="lecMap">
		
		select *
		from lecture		
		where approve = 'N'
		
	</select>
	
	<select id="getLectureAll" resultMap="lecMap">
		
		select *
		from lecture
		
	</select>

	<select id="getLecture" parameterClass="String"
		resultMap="lecMap">
		<!-- parameterClass생략가능 -->

		select *
		from lecture
		where lecture_id = #lecId#


	</select>

	<select id="checkLecture" parameterClass="String"
		resultClass="int">

		select count(*) as cnt
		from lecture
		where lecture_id =
		#lecId#


	</select>

	<select id="searchLecture" parameterClass="lecVO"
		resultMap="lecMap">

		select * from lecture where 1=1

		<isNotEmpty property="lecTitle">
			and lec_title = #lecTitle#
		</isNotEmpty>
		

	</select>
	
	

	
	

</sqlMap>			


